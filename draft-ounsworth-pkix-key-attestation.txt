



LAMPS                                                       M. Ounsworth
Internet-Draft                                                   Entrust
Intended status: Standards Track                           R. Kettlewell
Expires: 15 July 2023                                  Entrust - nCipher
                                                         11 January 2023


                      PKIX Key Attestation Format
                draft-ounsworth-pkix-key-attestation-00

Abstract

   This document describes syntax for conveying key origin attestation
   information to a Certification Authority (CA) or other entity, so
   that they may decide how much trust to place in the management
   private of the key, for example to support a decision about whether
   to issue a certificate.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-ounsworth-pkix-key-
   attestation/.

   Discussion of this document takes place on the Limited Additional
   Mechanisms for PKIX and SMIME (lamps) Working Group mailing list
   (mailto:spasm@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/spasm/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/spasm/.

   Source for this draft and an issue tracker can be found at
   https://github.com/EntrustCorporation/draft-ounsworth-pq-composite-
   keys.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.






Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 1]

Internet-Draft            PKIX Key Attestation              January 2023


   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 15 July 2023.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Cryptographic Keys  . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Trust Anchor Key  . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Intermediate CA Key . . . . . . . . . . . . . . . . . . .   4
     3.3.  Device Identity Key . . . . . . . . . . . . . . . . . . .   4
     3.4.  Device Certification Subkey . . . . . . . . . . . . . . .   4
     3.5.  Application Key . . . . . . . . . . . . . . . . . . . . .   5
   4.  Key Attestations  . . . . . . . . . . . . . . . . . . . . . .   5
     4.1.  Intermediate CA Certificate . . . . . . . . . . . . . . .   5
     4.2.  Device Identity Certificate . . . . . . . . . . . . . . .   6
     4.3.  Device Delegation Certificate . . . . . . . . . . . . . .   6
     4.4.  Key Attestation Certificate . . . . . . . . . . . . . . .   7
       4.4.1.  Vendor-Specific Information . . . . . . . . . . . . .   8
   5.  Key Use Policies  . . . . . . . . . . . . . . . . . . . . . .   8
     5.1.  Key Use Policy Variants . . . . . . . . . . . . . . . . .   8
     5.2.  Signature-Only Policy . . . . . . . . . . . . . . . . . .   9
     5.3.  Signature-Only Policy with Administrator Override . . . .   9
     5.4.  Vendor-Defined Key Use Policies . . . . . . . . . . . . .   9
   6.  Embedding Key Attestations in Certification Requests  . . . .   9
   7.  Implementation Considerations . . . . . . . . . . . . . . . .   9
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
     9.1.  Key Use Constraints . . . . . . . . . . . . . . . . . . .  10
     9.2.  Verification Model  . . . . . . . . . . . . . . . . . . .  10



Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 2]

Internet-Draft            PKIX Key Attestation              January 2023


     9.3.  Policies with Administrator Override  . . . . . . . . . .  11
   10. Normative References  . . . . . . . . . . . . . . . . . . . .  11
   Appendix A.  Samples  . . . . . . . . . . . . . . . . . . . . . .  12
   Appendix B.  ASN.1 Module . . . . . . . . . . . . . . . . . . . .  12
   Appendix C.  Intellectual Property Considerations . . . . . . . .  13
   Appendix D.  Contributors and Acknowledgements  . . . . . . . . .  14
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  14

1.  Introduction

   Key attestion refers to the originator of a cryptographic key pair
   providing information about the provenance of that key pair, in a
   manner that can be cryptographically verified.  The information
   provided may include, for example, the model and identity of the
   device that created the key pair and any policies that may be
   enforced upon the use of the private key.

   This information can be used by a Certification Authority to decide
   whether to issue a certificate, or by other entities for their own
   purposes.

   Many devices, including Hardware Security Modules, provide
   attestation information of some form in proprietary formats.  A
   common syntax for key attestations is required to reduce the
   implementation burden on CA implementors and operators.  Furthermore
   it is desirable that the syntax is sympathetic to existing CA
   implementations.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Cryptographic Keys

   This section describes the cryptographic keys referenced in this
   document.

3.1.  Trust Anchor Key

   A trust anchor key is a signing key held by a vendor.  It is used
   either to sign devices directly or to sign intermediate CA keys.  It
   may be used to sign intermediate CAs or it may be used to sign
   devices directly.




Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 3]

Internet-Draft            PKIX Key Attestation              January 2023


   Constraints:

   *  A trust anchor key MUST NOT be used for any purpose other than
      signing intermediate CA keys or devices.

3.2.  Intermediate CA Key

   An intermediate CA key is a signing key held by a vendor and
   certified by that vendor's trust anchor.  It is used either to sign
   devices directly or to sign further intermediate CA keys.  Like a
   trust anchor key, it may only used to sign intermediate CAs or it may
   be used to sign devices directly.

   The exact configuration and management of trust anchor keys and
   intermediate CA keys is beyond the scope of this document.  An
   example configuration is that a vendor have an offline trust anchor,
   and an intermediate CA in each of its manufacturing sites, certified
   by the trust anchor key when a manufacturing site is created or
   during maintenance or recovery activities.

   Constraints:

   *  An intermediate CA key MUST NOT be used for any purpose other than
      signing intermediate CA keys or devices.

3.3.  Device Identity Key

   A device identity key is a signing key held by a device.  It is used
   either to sign key attestations directly or to certify device
   certification subkeys.  It is envisaged that this key will persist
   for the lifetime of the device.

   Constraints:

   *  A device identity key MUST NOT be used for any purpose other than
      signing key attestation certificates or device delegation
      certificates.

3.4.  Device Certification Subkey

   A device certification key is a signing key held by a device.  It is
   used either to sign key attestations directly or to certify further
   device certification subkeys.  Device certification keys may have any
   lifetime, from single use to the lifetime of the device.

   Constraints:





Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 4]

Internet-Draft            PKIX Key Attestation              January 2023


   *  A device certification subkey MUST NOT be used for any purpose
      other than signing key attestation certificates or device
      delegation certificates.

3.5.  Application Key

   An application key is a key created and managed by a device.  Its
   purpose and lifetime are arbitrary.

4.  Key Attestations

   A key attestation consists of a nonempty sequence of [RFC5280]
   certificates.  There is are ordering constraints on the sequence of
   certificates, described below as requirements on a verifier.

   The first certificate is signed by a trust anchor key.  A CA (or any
   other entity which wishes to verify the key attestation) must decide
   through its own policies and processes which trust anchors keys to
   trust and what policies to accept in key attestations certified by
   them.  A trust anchor key MUST be associated with a vendor identity.

   Constraints:

   *  A verifier MUST verify that each certificate is well-formed

   *  A verifier MUST verify that the first certificate is signed by a
      trust anchor key

   *  A verifier MUST verify that each certificate, apart from the
      first, is certified by the previous certificate in the key
      attestation.

   The certificate types that may appear in a key attestation are
   described in the following sections.

4.1.  Intermediate CA Certificate

   An intermediate CA delegation certificate certifies an intermediate
   CA.  It MUST have the [RFC5280] basic constraints extension with the
   cA boolean set to true.  It MUST NOT have any of the extensions
   defined below.

   Constraints:

   *  A verifier may detected an intermediate CA delegation by the
      absence of the extensions defined below.





Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 5]

Internet-Draft            PKIX Key Attestation              January 2023


   *  There may be any number of intermediate CA certificates, including
      0.

4.2.  Device Identity Certificate

   A device identity certificate certifies a specific device, in the
   form of a binding between its identity and a public device identity
   key.  It MUST have the [RFC5280] basic constraints extension with the
   cA boolean set to true (since the device is acting as a CA).

   A device identity certificate MUST contain a DeviceInformation
   extension, identified by id-device-information.  This contains the
   vendor identity, device model and device serial.  Together these
   uniquely define a particular device.

   For a hardware device, it is envisaged that a manufacturing facility
   will sign a device identity certificate for each device as it is
   manufactured, binding a vendor-specific representation of device
   identity such as a serial number to the device's unique long-term key
   pair.

   No significance is attached to the subject field of a device identity
   certificate.

   Constraints:

   *  A verifier MUST reject any key attestation that does not contain
      exactly one device identity certificate.

   *  A verifier MUST reject any key attestation whose device identity
      certificate appears before an intermediate CA delegation.

   *  A verifier MUST reject any device identity certificate whose
      vendor identity does not match the one associated with the trust
      anchor used to verify the key attestation.

   *  Two distinct devices from the same vendor MUST NOT have the same
      device identity.

   *  Two distinct devices MUST NOT have the same device identity key.

4.3.  Device Delegation Certificate

   A device delegation certificate certifies that a certification subkey
   that belongs to a specific device.  It MUST have the [RFC5280] basic
   constraints extension with the cA boolean set to true (since the
   device is acting as a CA).




Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 6]

Internet-Draft            PKIX Key Attestation              January 2023


   A device delegation certificate MUST contain a
   DeviceSubkeyInformation extension, identified by id-device-subkey-
   information.  This contains the vendor identity, device model, device
   serial and key role.  Note that this does not uniquely define the
   certification subkey.

   It is envisaged that single hardware device may have multiple
   certification subkeys.  It may create new ones over time, for
   instance when the device is re-initialized, or if the device supports
   multiple users it may create a distinct certification subkeys for
   each user.

   No significance is attached to the subject field of a device
   delegation certificate.

   Constraints:

   *  A verifier MUST reject any key attestation whose device identity
      certificate appears before the device identity certificate.

   *  A verifier MUST reject any device delegation certificate whose
      vendor identity does not match the one associated with the trust
      anchor used to verify the key attestation.

   *  There may be any number of device delegation certificates,
      including 0.

4.4.  Key Attestation Certificate

   A key attestation certificate certifies that an application key was
   created in a particular device and is managed according to a
   particular policy.  If it contains the [RFC5280] basic constraints
   extension then it MUST have the cA boolean set to false.

   A key attestation certificate MUST contain a
   ApplicationKeyInformation extension identified by id-application-key-
   information.  This contains the vendor identity, device model, device
   serial, key use policy (see Section 5) and vendor-specific
   information.

   No significance is attached to the subject field of a key attestation
   certificate.

   Constraints:

   *  A verifier MUST reject any key attestation that does not contain
      exactly one key attestation certificate.




Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 7]

Internet-Draft            PKIX Key Attestation              January 2023


   *  A verifier MUST reject any key attestation whose key attestation
      certificate appears before any other kind of certificate.

   *  A verifier MUST reject any key attestation certificate whose
      vendor identity does not match the one associated with the trust
      anchor used to verify the key attestation.

   *  A verifier MUST reject any key attestation certificate whose
      policy is not in their list of acceptable policies.

4.4.1.  Vendor-Specific Information

   This field of the key attestation certificate may contain any octet
   string (including the empty string).  The interpretation is up to the
   vendor.  For example, it may be used to convey information about how
   the key was generated or a vendor-specific description of the
   policies that govern its use.

5.  Key Use Policies

   Key attestation certificates contain object identifiers describing
   the policies that the device will enforce upon use of the application
   key.  For example id-policy-signature-only indicates that the key may
   only be used to make signatures (and not to decrypt, as would be
   possible for an RSA key).

   Note that these are unrelated to the certificate policy OIDs defined
   in [RFC5280] section 4.2.1.4.

5.1.  Key Use Policy Variants

   Each of the policies described below has two variants.

   1.  In the first, the policy means that a key may be used only in
       certain ways, and this cannot be overidden even by an
       administrator.

   2.  In the second, the policy means that a key may normally be used
       only in certain ways, but that an authorized administrator may
       override this in some way (for example, in order to facilitate
       disaster recovery).

   For a CA, normally only the first variant (no administrative
   override) would be acceptable.  If the application key is lost then
   the application key owner can be expected to generate a new key and
   certify it.  There is no need to recover the old key.

   In other use cases, the weaker policy may be more appropriate.



Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 8]

Internet-Draft            PKIX Key Attestation              January 2023


5.2.  Signature-Only Policy

   This policy is identified by id-policy-signature-only.  It means that
   the private key may only be used for signature, and may not be
   exported in plaintext outside the device.

5.3.  Signature-Only Policy with Administrator Override

   This policy is identified by TODO.  It means that the private key may
   normally only be used for signature, but that an authorized
   administrator may override this in some way.

5.4.  Vendor-Defined Key Use Policies

   A vendor may define policies outside the list described in the list
   document, for example reflecting policies not envisaged by this
   document or to cover device-specific functionality.  For example they
   may describe a policy in terms of their device's proprietary policy
   or access control syntax# and publish an OID reflecting that policy.
   A verifier MUST NOT accept such a vendor-defined policy unless they
   fully understand the intended meaning.

6.  Embedding Key Attestations in Certification Requests

   A convenient way to convey a key attestation is to embed it into a
   [RFC2986] certification request.  This may be done via the
   AttestationBundle extension, identified by the OID id-attestation-
   bundle.

   Constraints:

   *  A certification request SHOULD only have one embedded key
      attestation.

   *  A CA MUST follow meet all the constraints on verifiers described
      above.

   *  A CA MUST verify that the subject public key in the certification
      request is the same as the subject public key in the key
      attestation certificate.

7.  Implementation Considerations

   ... TODO document any (non-security) GOTCHAs ...







Ounsworth & Kettlewell    Expires 15 July 2023                  [Page 9]

Internet-Draft            PKIX Key Attestation              January 2023


8.  IANA Considerations

   ... TODO document any codepoints or OIDs that we need IANA to
   register ...

   we do have some new OIDs.  I've used free ones, they can be replaced
   with something else of course.

9.  Security Considerations

   ... TODO document any additional (security) GOTCHAs ...

9.1.  Key Use Constraints

   The key use constraints describe above are essential.  For example if
   a device identity key could be used by a user to sign arbitrary
   messages, that user could forge key attestations.

9.2.  Verification Model

   An API that verifies a key attestion may be designed in a number of
   different ways.

   1.  It may accept just a key attestation.  It will verify it, and
       return either an error indicator or the public trust anchor key,
       vendor identity, public application key, and the policy governing
       is use.  The caller must check at least that the trust anchor key
       is acceptable; the vendor identity from the key attestation
       matches the one associated with the trust anchor; and that the
       policy is acceptable, before using the application key.  If the
       caller is running in a context where there are multiple copies of
       the application key (for example, the certification request
       verification described in Section 6 it must also check that all
       copies of the appcalition key match.

   2.  It may accept a key attestation, trust anchor, vendor identity
       and at least one acceptable policy.  It will verify the key
       attestation using the trust anchor, and check that the vendor
       identities in the key attestation match the trust anchor, and
       check that the policy is acceptable.  It will return either an
       error indicator or the application key.  If the caller is running
       in a context where there are multiple copies of the application
       key then it must also check that all copies of the appcalition
       key match.  Apart from that it can use the application key
       without further checks.






Ounsworth & Kettlewell    Expires 15 July 2023                 [Page 10]

Internet-Draft            PKIX Key Attestation              January 2023


   3.  It may accept a key attestation, trust anchor, vendor identity,
       application key and at least one acceptable policy.  It will
       verify the key attestation using the trust anchor, and check that
       the vendor identities in the key attestation match the trust
       anchor, check that the policy is acceptable, and that the
       application key is the expected value.  It will return either an
       error or a success indicator.  The caller can use the application
       key without further checks.

   In all of these models the same set of checks must be done, but in
   the first two some of the checks are delegated to the caller.  The
   advantage of the later models is that they are more robust against
   the caller ommitting some of the necessary checks.  For a publicly
   available API this robustness is particularly appropriate.

9.3.  Policies with Administrator Override

   No attempt is made to define the scope of administrator override in
   policies which include it.  Depending on the device it may mean that,
   for example, a signature-only RSA key could additional be given
   decrypt permission, or it could mean that private key material could
   be exploited in plaintext.  The range of possibilities is to broad to
   tie down in a device-independent specification.

   It should be noted that placing trust in a key does mean generally
   placing trust in the operators and administrators of the device that
   contains it, even without any possibilty of administrator override of
   the policy governing its use.  For example there is nothing in the
   signature-only policy to prevent a key owner exposing a signature
   oracle for their key, allowing anyone to sign with it.  In other
   words, verifiers should not place undue weight on the distinction
   between the two classes of policy.

10.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC2986]  Nystrom, M. and B. Kaliski, "PKCS #10: Certification
              Request Syntax Specification Version 1.7", RFC 2986,
              DOI 10.17487/RFC2986, November 2000,
              <https://www.rfc-editor.org/info/rfc2986>.







Ounsworth & Kettlewell    Expires 15 July 2023                 [Page 11]

Internet-Draft            PKIX Key Attestation              January 2023


   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8411]  Schaad, J. and R. Andrews, "IANA Registration for the
              Cryptographic Algorithm Object Identifier Range",
              RFC 8411, DOI 10.17487/RFC8411, August 2018,
              <https://www.rfc-editor.org/info/rfc8411>.

   [X.690]    ITU-T, "Information technology - ASN.1 encoding Rules:
              Specification of Basic Encoding Rules (BER), Canonical
              Encoding Rules (CER) and Distinguished Encoding Rules
              (DER)", ISO/IEC 8825-1:2015, November 2015.

Appendix A.  Samples

   ... either place samples here inline, or reference a github.  I've
   got a script I've used in other I-Ds to inline include files, if
   that's useful here.

Appendix B.  ASN.1 Module

   ... any ASN.1 that we are defining goes here ...






















Ounsworth & Kettlewell    Expires 15 July 2023                 [Page 12]

Internet-Draft            PKIX Key Attestation              January 2023


   -- TODO probably need some ASN.1 furniture around this
   -- TODO need to import Certificate from RFC5280

   id-device-information OBJECT IDENTIFIER ::=
           { 1 3 6 1 4 1 54392 5 1567 }

   DeviceInformation ::= SEQUENCE {
     vendor UTF8STring   -- manufacturer of device
     model UTF8STring    -- device model information
     serial UTF8STring   -- device instance information
   }

   id-device-subkey-information OBJECT IDENTIFIER ::=
           { 1 3 6 1 4 1 54392 5 1568 }

   DeviceSubkeyInformation ::= SEQUENCE {
     vendor UTF8STring   -- manufacturer of device
     model UTF8STring    -- device model information
     serial UTF8STring   -- device instance information
     role UTF8String     -- description of subkey role
   }

   id-application-key-information OBJECT IDENTIFIER ::=
           { 1 3 6 1 4 1 54392 5 1569 }
   id-policy-signature-only OBJECT IDENTIFIER ::=
           { 1 3 6 1 4 1 54392 5 1570 }

   ApplicationKeyInformation ::= SEQUENCE {
     vendor UTF8STring         -- manufacturer of device
     model UTF8STring          -- device model information
     policy OBJECT IDENTIFIER  -- policy governing key use
     vendorinfo OCTET STRING   -- vendor-specific information
   }

   id-attestation-bundle OBJECT IDENTIFIER ::=
           { 1 3 6 1 4 1 54392 5 1571 }

   AttestationBundle ::= SEQUENCE OF Certificate

Appendix C.  Intellectual Property Considerations

   ... mention any IP considerations here ...









Ounsworth & Kettlewell    Expires 15 July 2023                 [Page 13]

Internet-Draft            PKIX Key Attestation              January 2023


Appendix D.  Contributors and Acknowledgements

   This document incorporates contributions and comments from a large
   group of experts.  The Editors would especially like to acknowledge
   the expertise and tireless dedication of the following people, who
   attended many long meetings and generated millions of bytes of
   electronic mail and VOIP traffic over the past year in pursuit of
   this document:

   ... list of helpful people ...

   We are grateful to all, including any contributors who may have been
   inadvertently omitted from this list.

   This document borrows text from similar documents, including those
   referenced below.  Thanks go to the authors of those documents.
   "Copying always makes things easier and less error prone" -
   [RFC8411].

Authors' Addresses

   Mike Ounsworth
   Entrust Limited
   2500 Solandt Road -- Suite 100
   Ottawa, Ontario  K2K 3G5
   Canada
   Email: mike.ounsworth@entrust.com


   Richard Kettlewell
   Entrust - nCipher Security Limited
   One Station Square
   Cambridge
   CB1 2GA
   United Kingdom
   Email: richard.kettlewell@entrust.com















Ounsworth & Kettlewell    Expires 15 July 2023                 [Page 14]
